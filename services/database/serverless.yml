service: database

frameworkVersion: "4"

plugins:
  - serverless-dynamodb
  - serverless-stack-termination-protection

custom:
  project: "qmr"
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  serverlessTerminationProtection:
    stages:
      - nonsense
  bannerTableName: ${self:custom.stage}-banners
  measureTable: ${self:custom.stage}-measure
  coreSetTable: ${self:custom.stage}-coreSet
  rateTable: ${self:custom.stage}-rate
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stackTags:
    PROJECT: ${self:custom.project}
    SERVICE: ${self:service}

resources:
  Resources:
    BannerTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.bannerTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    QualityMeasureTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.measureTable}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: compoundKey
            AttributeType: S
          - AttributeName: measure
            AttributeType: S
        KeySchema:
          - AttributeName: compoundKey
            KeyType: HASH
          - AttributeName: measure
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    QualityCoreSetTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.coreSetTable}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: compoundKey
            AttributeType: S
          - AttributeName: coreSet
            AttributeType: S
        KeySchema:
          - AttributeName: compoundKey
            KeyType: HASH
          - AttributeName: coreSet
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    CombinedRateTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.rateTable}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: compoundKey
            AttributeType: S
          - AttributeName: measure
            AttributeType: S
        KeySchema:
          - AttributeName: compoundKey
            KeyType: HASH
          - AttributeName: measure
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
  Outputs:
    CoreSetTable:
      Value: !Ref QualityCoreSetTable
    CoreSetTableArn:
      Value: !GetAtt QualityCoreSetTable.Arn
    CoreSetTableStreamArn:
      Value: !GetAtt QualityCoreSetTable.StreamArn
    MeasureTable:
      Value: !Ref QualityMeasureTable
    MeasureTableArn:
      Value: !GetAtt QualityMeasureTable.Arn
    MeasureTableStreamArn:
      Value: !GetAtt QualityMeasureTable.StreamArn
    RateTable:
      Value: !Ref CombinedRateTable
    RateTableArn:
      Value: !GetAtt CombinedRateTable.Arn
    RateTableStreamArn:
      Value: !GetAtt CombinedRateTable.StreamArn
    BannerTableName:
      Value: !Ref BannerTable
    BannerTableArn:
      Value: !GetAtt BannerTable.Arn
    Region:
      Value: !Sub ${AWS::Region}
